# Generated by Django 3.1 on 2020-12-02 06:47

import apps.l_core.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('l_core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TemplateDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('is_group', models.BooleanField(default=False)),
                ('code', models.SlugField(default=django.utils.crypto.get_random_string, verbose_name='Код')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значення')),
                ('template_file', models.FileField(null=True, upload_to='uploads/doc_templates/%Y/%m/%d/', verbose_name='Шаблон документу')),
                ('related_model_name', models.SlugField(max_length=100, unique=True, verbose_name='Шаблон документу')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='templatedocument_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='templatedocument_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dict_register.templatedocument')),
            ],
            options={
                'verbose_name': 'Шаблон документу',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('is_group', models.BooleanField(default=False)),
                ('code', models.SlugField(default=django.utils.crypto.get_random_string, verbose_name='Код')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значення')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='propertytype_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='propertytype_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dict_register.propertytype')),
            ],
            options={
                'verbose_name': 'Тип власності',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('is_group', models.BooleanField(default=False)),
                ('code', models.SlugField(default=django.utils.crypto.get_random_string, verbose_name='Код')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значення')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organizationtype_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organizationtype_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dict_register.organizationtype')),
            ],
            options={
                'verbose_name': 'Типів органцізації',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='MainActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('is_group', models.BooleanField(default=False)),
                ('code', models.SlugField(default=django.utils.crypto.get_random_string, verbose_name='Код')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Значення')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mainactivity_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mainactivity_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор')),
                ('organization', models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dict_register.mainactivity')),
            ],
            options={
                'verbose_name': 'Вид основної діяльності',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
    ]
