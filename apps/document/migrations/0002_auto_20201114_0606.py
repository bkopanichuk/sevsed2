# Generated by Django 3.1 on 2020-11-14 06:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('l_core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('document', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='taskexecutor',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taskexecutor_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='taskexecutor',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taskexecutor_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='taskexecutor',
            name='executor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_executor_users', to=settings.AUTH_USER_MODEL, verbose_name='Виконавець'),
        ),
        migrations.AddField(
            model_name='taskexecutor',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='taskexecutor',
            name='result_document',
            field=models.ForeignKey(help_text='Результатом виконання завдання іноді може бути документ, але не завжти. Зазвичай достатньо описати результат', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_executors', to='document.basedocument'),
        ),
        migrations.AddField(
            model_name='taskexecutor',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_executors', to='document.task'),
        ),
        migrations.AddField(
            model_name='task',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='controller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_controller', to=settings.AUTH_USER_MODEL, verbose_name='Контролер'),
        ),
        migrations.AddField(
            model_name='task',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.basedocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='task',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='flow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='document.flow'),
        ),
        migrations.AddField(
            model_name='task',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='task',
            name='parent_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_node', to='document.task', verbose_name='Резолюція до'),
        ),
        migrations.AddField(
            model_name='task',
            name='parent_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_task', to='document.task', verbose_name='Резолюція залежна від'),
        ),
        migrations.AddField(
            model_name='sign',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_sign', to='document.basedocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='sign',
            name='signer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Підписант'),
        ),
        migrations.AddField(
            model_name='registrationmask',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationmask_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationmask',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationmask_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationmask',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='registrationjournalvolume',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournalvolume_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationjournalvolume',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournalvolume_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationjournalvolume',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='registrationjournalvolume',
            name='registration_journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registration_journal_volumes', to='document.registrationjournal', verbose_name='Журнал'),
        ),
        migrations.AddField(
            model_name='registrationjournal',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournal_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationjournal',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournal_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationjournal',
            name='mask',
            field=models.ForeignKey(help_text='\n{seq_number} - номер документа в межах реєстраційного ключа \n\n{yyyy} - поточний рік (4 символи) \n\n{yy} - поточний рік (2 символи) \n\n{idx_journal} - код журналу \n\n{doc_cast} - код виду документа \n\n', on_delete=django.db.models.deletion.PROTECT, related_name='registration_journals', to='document.registrationmask', verbose_name='Маска реєстрації'),
        ),
        migrations.AddField(
            model_name='registrationjournal',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='outgoingdocumenttype',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoingdocumenttype_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='outgoingdocumenttype',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoingdocumenttype_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='outgoingdocumenttype',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='mainfileversion',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.basedocument'),
        ),
        migrations.AddField(
            model_name='incomingdocumenttype',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incomingdocumenttype_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='incomingdocumenttype',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incomingdocumenttype_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='incomingdocumenttype',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='executor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Виконавець'),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='result_document',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Результатом виконання завдання іноді може бути документ, але не завжти. Зазвичай достатньо описати результат', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.basedocument'),
        ),
        migrations.AddField(
            model_name='historicaltaskexecutor',
            name='task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.task'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='controller',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Контролер'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='document',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.basedocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='flow',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.flow'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='parent_node',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.task', verbose_name='Резолюція до'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='parent_task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.task', verbose_name='Резолюція залежна від'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='correspondent',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization', verbose_name='Кореспондент'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='cover_letter',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.coverletter', verbose_name='*Супровідний лист'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='department',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.department', verbose_name='Департамент'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='execute_task_on_create',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.taskexecutor', verbose_name='Закрити задачу при стовренні документа'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='incoming_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.incomingdocumenttype', verbose_name='Тип документа'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='main_signer',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Підписант'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='outgoing_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.outgoingdocumenttype', verbose_name='Тип вихідного документа'),
        ),
        migrations.AddField(
            model_name='historicalbasedocument',
            name='registration',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='document.registrationjournal', verbose_name='Журнал реєстрації'),
        ),
        migrations.AddField(
            model_name='flowapprove',
            name='approver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='На розгляд'),
        ),
        migrations.AddField(
            model_name='flowapprove',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flowapprove_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flowapprove',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flowapprove_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flowapprove',
            name='flow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvers', to='document.flow'),
        ),
        migrations.AddField(
            model_name='flowapprove',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='flow',
            name='approvers_list',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='На розгляд'),
        ),
        migrations.AddField(
            model_name='flow',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flow_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flow',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.basedocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='flow',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flow_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flow',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='documentgeneratedtext',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.basedocument'),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentfile_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.basedocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentfile_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentfile',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='coverletter',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coverletter_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coverletter',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coverletter_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coverletter',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='coverletter',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cover_letters', to='l_core.coreorganization', verbose_name='Отримувач'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='document.basedocument'),
        ),
        migrations.AddField(
            model_name='comment',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='comment',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='document.task'),
        ),
        migrations.AddField(
            model_name='comment',
            name='task_executor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='document.taskexecutor'),
        ),
        migrations.AddField(
            model_name='comment',
            name='to_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Для користувача'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='approvers_list',
            field=models.ManyToManyField(blank=True, help_text='Список користувачів які мають розглянути документ', to=settings.AUTH_USER_MODEL, verbose_name='На розгляд'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='basedocument_author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='correspondent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incoming_documents', to='l_core.coreorganization', verbose_name='Кореспондент'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='cover_letter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='document.coverletter', verbose_name='*Супровідний лист'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='l_core.department', verbose_name='Департамент'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='document_linked_to',
            field=models.ManyToManyField(blank=True, related_name='_basedocument_document_linked_to_+', to='document.BaseDocument', verbose_name='До документа'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='basedocument_editor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='execute_task_on_create',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='document.taskexecutor', verbose_name='Закрити задачу при стовренні документа'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='incoming_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='document.incomingdocumenttype', verbose_name='Тип документа'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='mailing_list',
            field=models.ManyToManyField(related_name='outgoing_documents', to='l_core.CoreOrganization', verbose_name='Адресати'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='main_signer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_document_signer', to=settings.AUTH_USER_MODEL, verbose_name='Підписант'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='outgoing_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='document.outgoingdocumenttype', verbose_name='Тип вихідного документа'),
        ),
        migrations.AddField(
            model_name='basedocument',
            name='registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='document.registrationjournal', verbose_name='Журнал реєстрації'),
        ),
        migrations.AlterUniqueTogether(
            name='taskexecutor',
            unique_together={('task', 'executor_role'), ('task', 'executor')},
        ),
        migrations.AlterUniqueTogether(
            name='flow',
            unique_together={('id', 'document')},
        ),
    ]
