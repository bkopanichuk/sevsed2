# Generated by Django 3.1 on 2020-11-27 17:07

import apps.document.models.task_model
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('l_core', '0002_auto_20201127_1907'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('document', '0004_auto_20201123_2135'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='basedocument',
            options={'permissions': [('register_document', 'Може реєструвати документ'), ('create_resolution', 'Може створювати резолюцію'), ('execute_resolution', 'Може запускати резолюцію на виконання'), ('send_to_archive', 'Може відправляти документ в архів'), ('send_to_verview', 'Може відправляти документ на узгодження'), ('view_on_registrations', 'Переглядати документи на реєстрації'), ('view_registered', 'Переглядати документи зареєстровані'), ('view_on_resolution', 'Переглядати документи на резолюції'), ('view_on_execution', 'Переглядати документи на виконанні'), ('view_completed', 'Переглядати документи виконані'), ('view_on_control', 'Переглядати документи на контролі'), ('view_passed_control', 'Переглядати документи зняті з котролю'), ('view_archived', 'Переглядати документи в архіві'), ('view_on_agreement', 'Переглядати документи на погодженні'), ('view_project', 'Переглядати документи (проекти)'), ('view_reject', 'Переглядати відмови'), ('view_concerted', 'Переглядати погоджені'), ('view_on_singing', 'Переглядати на підписанні'), ('view_signed', 'Переглядати підписані'), ('view_transfered', 'Переглядати передані'), ('change_document_dictionary', 'Редагувати довідники документів')], 'verbose_name': 'Документ', 'verbose_name_plural': 'Документы'},
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='basedocument_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='basedocument_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='basedocument',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comment_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coverletter_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coverletter_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='coverletter',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentfile_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentfile_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='documentfile',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flow_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flow_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='flow',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flowapprove_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flowapprove_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='flowapprove',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='date_add',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='date_edit',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='historicalbasedocument',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='date_add',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='date_edit',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='historicaltask',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='date_add',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='date_edit',
            field=models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='editor',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='historicaltaskexecutor',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incomingdocumenttype_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incomingdocumenttype_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='incomingdocumenttype',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='innerdocumenttype_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='innerdocumenttype_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='innerdocumenttype',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoingdocumenttype_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='outgoingdocumenttype_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='outgoingdocumenttype',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournal_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournal_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='registrationjournal',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournalvolume_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationjournalvolume_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='registrationjournalvolume',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationmask_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='registrationmask_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='registrationmask',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='task',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='task',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='task',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='task',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='task',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='task',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='task',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taskexecutor_author', to=settings.AUTH_USER_MODEL, verbose_name='**Автор'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='date_add',
            field=models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='date_edit',
            field=models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='editor',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taskexecutor_editor', to=settings.AUTH_USER_MODEL, verbose_name='**Останій редактор'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='organization',
            field=models.ForeignKey(help_text='До якої організації відноситься інформація', null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization', verbose_name='**Організація'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='sign_file',
            field=models.FileField(null=True, upload_to=apps.document.models.task_model.get_sign_file_path, verbose_name='Цифровий підпис(файл)'),
        ),
        migrations.AlterField(
            model_name='taskexecutor',
            name='unique_uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен'),
        ),
    ]
