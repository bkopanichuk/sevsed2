# Generated by Django 3.1 on 2020-11-30 18:50

import apps.document.models.coverletter_model
import apps.document.models.document_additional_file_model
import apps.document.models.document_model
import apps.document.models.task_model
import apps.document.models.validators
import apps.l_core.mixins
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('outgoing_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='*Вихідний номер')),
                ('outgoing_date', models.DateField(blank=True, null=True, verbose_name='*Вихідна дата')),
                ('signer', models.CharField(blank=True, max_length=100, null=True, verbose_name='*Підписант')),
                ('sign', models.TextField(blank=True, max_length=100, null=True, verbose_name='*Підпис')),
                ('reply_date', models.DateField(blank=True, null=True, verbose_name='Кінцева дата  для надання відповіді')),
                ('source', models.CharField(choices=[('EMAIL', 'Електронна пошта'), ('SEV', 'СЕВОВВ'), ('LETTER', 'Поштою (просте)'), ('REGISTERED_LETTER', 'Поштою (рекомендоване)'), ('HAND_OUT', 'Наручно')], default='LETTER', max_length=50, verbose_name='Джерело надходження')),
                ('blank_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='&Номер бланку')),
                ('approve_type', models.CharField(choices=[('WITH_APPROVE', 'З узгодженням'), ('WITHOUT_APPROVE', 'Простий (без узгодження)')], default='WITH_APPROVE', max_length=20, verbose_name='Чи потрібне узгодження')),
                ('mailing_method', models.CharField(choices=[('EMAIL', 'Електронна пошта'), ('SEV', 'СЕВОВВ'), ('LETTER', 'Поштою (просте)'), ('REGISTERED_LETTER', 'Поштою (рекомендоване)'), ('HAND_OUT', 'Наручно')], default='LETTER', max_length=50, verbose_name='Спосіб відпралення')),
                ('title', models.CharField(default='-', max_length=100, verbose_name='Назва')),
                ('main_file', models.FileField(max_length=500, null=True, upload_to=apps.document.models.document_model.get_upload_document_path, verbose_name='Головинй файл')),
                ('document_cast', models.CharField(choices=[('INCOMING', 'Вхідний'), ('OUTGOING', 'Вихідний'), ('INNER', 'Внутрішній')], max_length=100, verbose_name='Вид документа')),
                ('reg_number', models.CharField(max_length=100, null=True, verbose_name='Реєстраціний номер')),
                ('reg_date', models.DateField(editable=False, null=True, verbose_name='Дата реєстрації')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Короткий зміст')),
                ('registration_type', models.CharField(choices=[('MANUAL_REG', 'Ручна'), ('AUTOMATIC_REG', 'Автоматична')], default='MANUAL_REG', max_length=50, verbose_name='&Тип реєстрації')),
                ('case_index', models.CharField(max_length=100, null=True, verbose_name='Індекс  та  заголовок справи')),
                ('case_number', models.CharField(max_length=100, null=True, verbose_name='Номер тому справи')),
                ('preview', models.FileField(editable=False, max_length=500, null=True, upload_to=apps.document.models.document_model.get_preview_directory)),
                ('preview_pdf', models.FileField(editable=False, max_length=500, null=True, upload_to=apps.document.models.document_model.get_preview_directory)),
                ('status', models.CharField(default='PROJECT', max_length=100, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'permissions': [('register_document', 'Може реєструвати документ'), ('create_resolution', 'Може створювати резолюцію'), ('execute_resolution', 'Може запускати резолюцію на виконання'), ('send_to_archive', 'Може відправляти документ в архів'), ('send_to_verview', 'Може відправляти документ на узгодження'), ('view_on_registrations', 'Переглядати документи на реєстрації'), ('view_registered', 'Переглядати документи зареєстровані'), ('view_on_resolution', 'Переглядати документи на резолюції'), ('view_on_execution', 'Переглядати документи на виконанні'), ('view_completed', 'Переглядати документи виконані'), ('view_on_control', 'Переглядати документи на контролі'), ('view_passed_control', 'Переглядати документи зняті з котролю'), ('view_archived', 'Переглядати документи в архіві'), ('view_on_agreement', 'Переглядати документи на погодженні'), ('view_project', 'Переглядати документи (проекти)'), ('view_reject', 'Переглядати відмови'), ('view_concerted', 'Переглядати погоджені'), ('view_on_singing', 'Переглядати на підписанні'), ('view_signed', 'Переглядати підписані'), ('view_transfered', 'Переглядати передані'), ('change_document_dictionary', 'Редагувати довідники документів')],
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('description', models.CharField(max_length=500, verbose_name='Тип завдання')),
            ],
            options={
                'verbose_name': 'Завдання',
                'verbose_name_plural': 'Завдання',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='CoverLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('outgoing_number', models.CharField(max_length=100, verbose_name='Вхідний номер')),
                ('outgoing_date', models.DateField(verbose_name='Вихідна дата')),
                ('file', models.FileField(null=True, upload_to=apps.document.models.coverletter_model.get_upload_document_path, verbose_name='Супровідний файл')),
                ('signer', models.CharField(max_length=100, verbose_name='Підписант')),
                ('control_level', models.CharField(choices=[('NONE', 'Без контролю'), ('SPECIAL', 'Особливий')], max_length=100, verbose_name='Рівень контролю')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='Терміново')),
            ],
            options={
                'verbose_name': 'Супровідний лист',
                'verbose_name_plural': 'Супровідні листи',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='DocumentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('upload', models.FileField(max_length=500, upload_to=apps.document.models.document_additional_file_model.related_uid_directory_path)),
                ('preview', models.FileField(editable=False, max_length=500, null=True, upload_to='')),
            ],
            options={
                'verbose_name': 'Повязаний файл',
                'verbose_name_plural': 'Повязані файли',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='DocumentGeneratedText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Зміст')),
            ],
            options={
                'verbose_name': 'Зміст',
                'verbose_name_plural': 'Зміст',
            },
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('goal', models.CharField(choices=[('EXECUTE', 'На виконання'), ('APPROVE', 'Погодження')], default='EXECUTE', max_length=20, verbose_name='Тип завдання')),
                ('status', models.CharField(choices=[('PENDING', 'Проект'), ('RUNNING', 'Виконується'), ('SUCCESS', 'Виконана'), ('REJECT', 'Відхилено')], max_length=50, verbose_name='Сатус')),
                ('execution_type', models.CharField(choices=[('PARALLEL', 'Паралельно'), ('BY_ORDER', 'Послідовно')], default='BY_ORDER', max_length=20, verbose_name='Спосіб виконання')),
            ],
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='FlowApprove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('status', models.CharField(choices=[('PENDING', 'Очікує підтвердження'), ('SUCCESS', 'Підтверджено'), ('REJECT', 'Відхилено')], max_length=50, verbose_name='Сатус')),
            ],
            options={
                'verbose_name': 'Підтвердження розгляду',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaseDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни')),
                ('outgoing_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='*Вихідний номер')),
                ('outgoing_date', models.DateField(blank=True, null=True, verbose_name='*Вихідна дата')),
                ('signer', models.CharField(blank=True, max_length=100, null=True, verbose_name='*Підписант')),
                ('sign', models.TextField(blank=True, max_length=100, null=True, verbose_name='*Підпис')),
                ('reply_date', models.DateField(blank=True, null=True, verbose_name='Кінцева дата  для надання відповіді')),
                ('source', models.CharField(choices=[('EMAIL', 'Електронна пошта'), ('SEV', 'СЕВОВВ'), ('LETTER', 'Поштою (просте)'), ('REGISTERED_LETTER', 'Поштою (рекомендоване)'), ('HAND_OUT', 'Наручно')], default='LETTER', max_length=50, verbose_name='Джерело надходження')),
                ('blank_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='&Номер бланку')),
                ('approve_type', models.CharField(choices=[('WITH_APPROVE', 'З узгодженням'), ('WITHOUT_APPROVE', 'Простий (без узгодження)')], default='WITH_APPROVE', max_length=20, verbose_name='Чи потрібне узгодження')),
                ('mailing_method', models.CharField(choices=[('EMAIL', 'Електронна пошта'), ('SEV', 'СЕВОВВ'), ('LETTER', 'Поштою (просте)'), ('REGISTERED_LETTER', 'Поштою (рекомендоване)'), ('HAND_OUT', 'Наручно')], default='LETTER', max_length=50, verbose_name='Спосіб відпралення')),
                ('title', models.CharField(default='-', max_length=100, verbose_name='Назва')),
                ('main_file', models.TextField(max_length=500, null=True, verbose_name='Головинй файл')),
                ('document_cast', models.CharField(choices=[('INCOMING', 'Вхідний'), ('OUTGOING', 'Вихідний'), ('INNER', 'Внутрішній')], max_length=100, verbose_name='Вид документа')),
                ('reg_number', models.CharField(max_length=100, null=True, verbose_name='Реєстраціний номер')),
                ('reg_date', models.DateField(editable=False, null=True, verbose_name='Дата реєстрації')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Короткий зміст')),
                ('registration_type', models.CharField(choices=[('MANUAL_REG', 'Ручна'), ('AUTOMATIC_REG', 'Автоматична')], default='MANUAL_REG', max_length=50, verbose_name='&Тип реєстрації')),
                ('case_index', models.CharField(max_length=100, null=True, verbose_name='Індекс  та  заголовок справи')),
                ('case_number', models.CharField(max_length=100, null=True, verbose_name='Номер тому справи')),
                ('preview', models.TextField(editable=False, max_length=500, null=True)),
                ('preview_pdf', models.TextField(editable=False, max_length=500, null=True)),
                ('status', models.CharField(default='PROJECT', max_length=100, verbose_name='Статус')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Документ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни')),
                ('goal', models.CharField(choices=[('EXECUTE', 'На виконання'), ('APPROVE', 'Погодження')], default='EXECUTE', max_length=20, verbose_name='Тип завдання')),
                ('task_status', models.CharField(choices=[('PENDING', 'Формується'), ('RUNNING', 'Виконується'), ('SUCCESS', 'Виконана'), ('RETRY', 'На доопрацювання'), ('REJECT', 'Скасована')], default='PENDING', max_length=100, verbose_name='Статус завдання')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок виконання завдань')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Чи виконано')),
                ('title', models.CharField(max_length=200, verbose_name='Завдання')),
                ('author_is_controller', models.BooleanField(default=False, verbose_name='Я контролер')),
                ('is_controlled', models.BooleanField(default=False, verbose_name='Чи перевірено')),
                ('task_type', models.CharField(choices=[('TASK', 'Виконання завданя'), ('APPROVE', 'Погодження документа')], default='TASK', max_length=20, verbose_name='Тип завдання')),
                ('start_date', models.DateField(blank=True, editable=False, null=True, verbose_name='Термін з')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='Термін до')),
                ('execute_date', models.DateField(null=True, verbose_name='Дата фактичного виконання')),
                ('approve_type', models.CharField(choices=[('APPROVE', 'Візування'), ('SIGN', 'Підпис')], default='APPROVE', max_length=10, verbose_name='Тип підтвердження')),
                ('controller_comment', models.TextField(null=True, verbose_name='Коментар контролера')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Завдання',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTaskExecutor',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(blank=True, db_index=True, editable=False, null=True, verbose_name='**Дата останньої зміни')),
                ('executor_role', models.CharField(choices=[('MAIN', 'Головний'), ('CO_MAIN', 'Співвиконавець'), ('INFORMATION', 'Для інформації')], max_length=50, null=True, verbose_name='Роль')),
                ('detail', models.TextField(max_length=500, null=True, verbose_name='Уточення завдання')),
                ('result', models.TextField(max_length=500, null=True, verbose_name='Деталі виконаного підзавдання')),
                ('result_file', models.TextField(max_length=100, null=True, verbose_name='Результат (файл)')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='Уточнення кінцевого терміну')),
                ('status', models.CharField(choices=[('PENDING', 'Очукується виконання'), ('RUNNING', 'Виконується'), ('SUCCESS', 'Виконана'), ('RETRY', 'Доопрацювання'), ('REJECT', 'Відхилено')], default='PENDING', max_length=20, verbose_name='Статус завдання')),
                ('sign', models.TextField(null=True, verbose_name='Цифровий підпис')),
                ('sign_file', models.TextField(max_length=100, null=True, verbose_name='Цифровий підпис(файл)')),
                ('approve_method', models.CharField(choices=[('SIMPLE_SIGN', 'Звичайне підтвердження'), ('DIGIT_SIGN', 'Накладання ЕЦП')], max_length=20, null=True, verbose_name='Метод підтвердження')),
                ('sign_info', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Детальна інформація про накладений цифровий підпис')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Виконання завдання',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IncomingDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('name', models.CharField(max_length=200, verbose_name='Тип вхідного документа')),
                ('execute_interval', models.PositiveSmallIntegerField(default=5, verbose_name='Час на обробку документа (робочих днів)')),
                ('execute_interval_reason', models.TextField(help_text='Необхідно вказати станню закону, постанову КМУ, або інший нормативний документ', max_length=1000, null=True, verbose_name='Обгарунтування встановленого часу на обробку')),
            ],
            options={
                'verbose_name': 'Тип вхідного документу',
                'verbose_name_plural': 'Типи вхідних документів',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='InnerDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('name', models.CharField(max_length=200, verbose_name='Тип внутрішнього документа')),
            ],
            options={
                'verbose_name': 'Тип внутрішнього документу',
                'verbose_name_plural': 'Типи внутрішніх документів',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='MainFileVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('main_file', models.FileField(max_length=500, null=True, upload_to=apps.document.models.document_model.get_upload_document_path, verbose_name='Головинй файл')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='OutgoingDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('name', models.CharField(max_length=200, verbose_name='Тип вхідного документа')),
            ],
            options={
                'verbose_name': 'Тип вихідного документу',
                'verbose_name_plural': 'Типи вихідних документів',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='RegistrationJournal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('max_count_to_new_volume', models.PositiveIntegerField(default=250, verbose_name='Кількість документів в томі')),
                ('current_max_number', models.PositiveIntegerField(default=0, editable=False, verbose_name='Поточний максимальний номер')),
                ('name', models.CharField(max_length=100, verbose_name='Назва')),
                ('document_cast', models.CharField(choices=[('INCOMING', 'Вхідний'), ('OUTGOING', 'Вихідний'), ('INNER', 'Внутрішній')], max_length=50, verbose_name='Вид документа')),
            ],
            options={
                'verbose_name': 'Журнал реєстрації',
                'verbose_name_plural': 'Журнали реєстрації',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='RegistrationJournalVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('name', models.CharField(max_length=100, verbose_name='Назва(номер)')),
                ('current_max_number', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Том журналу реєстрації',
                'verbose_name_plural': 'Томи журналів реєстрації',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='RegistrationMask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('name', models.CharField(max_length=100, verbose_name='Назва')),
                ('description', models.TextField(blank=True, max_length=400, null=True, verbose_name='Опис')),
                ('mask', models.CharField(max_length=150, validators=[apps.document.models.validators.mask_validator], verbose_name='Маска')),
            ],
            options={
                'verbose_name': 'Маска реєстраціного номеру',
                'verbose_name_plural': 'Маски реєстраціних номерів',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign', models.TextField(blank=True, max_length=100, null=True, verbose_name='Підпис')),
                ('sign_info', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Детальна інформація про накладений цифровий підпис')),
            ],
            options={
                'verbose_name': 'Підпис',
                'verbose_name_plural': 'Підписи',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('goal', models.CharField(choices=[('EXECUTE', 'На виконання'), ('APPROVE', 'Погодження')], default='EXECUTE', max_length=20, verbose_name='Тип завдання')),
                ('task_status', models.CharField(choices=[('PENDING', 'Формується'), ('RUNNING', 'Виконується'), ('SUCCESS', 'Виконана'), ('RETRY', 'На доопрацювання'), ('REJECT', 'Скасована')], default='PENDING', max_length=100, verbose_name='Статус завдання')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок виконання завдань')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Чи виконано')),
                ('title', models.CharField(max_length=200, verbose_name='Завдання')),
                ('author_is_controller', models.BooleanField(default=False, verbose_name='Я контролер')),
                ('is_controlled', models.BooleanField(default=False, verbose_name='Чи перевірено')),
                ('task_type', models.CharField(choices=[('TASK', 'Виконання завданя'), ('APPROVE', 'Погодження документа')], default='TASK', max_length=20, verbose_name='Тип завдання')),
                ('start_date', models.DateField(auto_now_add=True, null=True, verbose_name='Термін з')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='Термін до')),
                ('execute_date', models.DateField(null=True, verbose_name='Дата фактичного виконання')),
                ('approve_type', models.CharField(choices=[('APPROVE', 'Візування'), ('SIGN', 'Підпис')], default='APPROVE', max_length=10, verbose_name='Тип підтвердження')),
                ('controller_comment', models.TextField(null=True, verbose_name='Коментар контролера')),
            ],
            options={
                'verbose_name': 'Завдання',
                'verbose_name_plural': 'Завдання',
                'ordering': ['date_add'],
                'permissions': [('set_controller', 'Встановлювати контролера')],
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='TaskExecutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='**Дата створення')),
                ('date_edit', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='**Дата останньої зміни')),
                ('executor_role', models.CharField(choices=[('MAIN', 'Головний'), ('CO_MAIN', 'Співвиконавець'), ('INFORMATION', 'Для інформації')], max_length=50, null=True, verbose_name='Роль')),
                ('detail', models.TextField(max_length=500, null=True, verbose_name='Уточення завдання')),
                ('result', models.TextField(max_length=500, null=True, verbose_name='Деталі виконаного підзавдання')),
                ('result_file', models.FileField(null=True, upload_to=apps.document.models.task_model.get_result_file_path, verbose_name='Результат (файл)')),
                ('end_date', models.DateField(blank=True, default=None, null=True, verbose_name='Уточнення кінцевого терміну')),
                ('status', models.CharField(choices=[('PENDING', 'Очукується виконання'), ('RUNNING', 'Виконується'), ('SUCCESS', 'Виконана'), ('RETRY', 'Доопрацювання'), ('REJECT', 'Відхилено')], default='PENDING', max_length=20, verbose_name='Статус завдання')),
                ('sign', models.TextField(null=True, verbose_name='Цифровий підпис')),
                ('sign_file', models.FileField(null=True, upload_to=apps.document.models.task_model.get_sign_file_path, verbose_name='Цифровий підпис(файл)')),
                ('approve_method', models.CharField(choices=[('SIMPLE_SIGN', 'Звичайне підтвердження'), ('DIGIT_SIGN', 'Накладання ЕЦП')], max_length=20, null=True, verbose_name='Метод підтвердження')),
                ('sign_info', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Детальна інформація про накладений цифровий підпис')),
            ],
            options={
                'verbose_name': 'Виконання завдання',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
    ]
