# Generated by Django 3.1 on 2020-11-30 18:50

import apps.l_core.mixins
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('atu', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('ipn', models.CharField(max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
            },
            bases=(apps.l_core.mixins.RelatedObjects, apps.l_core.mixins.CheckProtected, models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoreOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('name', models.TextField(blank=True, db_index=True, null=True, verbose_name='Назва організації')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='Повна назва організації')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адреса')),
                ('edrpou', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True, verbose_name='ЄДРПОУ')),
                ('mfo', models.CharField(blank=True, max_length=50, null=True, verbose_name='МФО')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('fax', models.CharField(blank=True, max_length=200, null=True, verbose_name='Факс')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='EMAIL')),
                ('site', models.URLField(blank=True, null=True, verbose_name='Сайт')),
                ('status', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Статус')),
                ('register_date', models.DateField(blank=True, null=True, verbose_name='Дата державної реєстрації')),
                ('work_reason', models.TextField(null=True, verbose_name='Працює на підставі')),
                ('sert_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Серія та номер державної реєстрації')),
                ('settlement_account', models.CharField(blank=True, max_length=30, null=True, verbose_name='Розрахунковий рахунок')),
                ('bank', models.CharField(choices=[('K', 'Комерційний'), ('Б', 'Бюджет')], max_length=1, null=True, verbose_name='Тип банку')),
                ('bank_name', models.CharField(max_length=200, null=True, verbose_name='Назва банку')),
                ('ipn', models.CharField(blank=True, max_length=200, null=True, verbose_name='ІПН')),
                ('taxation_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Спосіб оподаткування')),
                ('certificate_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Номер свідотства ПДВ')),
                ('main_unit', models.CharField(blank=True, max_length=200, null=True, verbose_name='Уповноважена особа')),
                ('main_unit_state', models.CharField(blank=True, max_length=200, null=True, verbose_name='Посада уповноваженої особи')),
                ('main_activity_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Основна діяльність (text)')),
                ('central_office', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Центральний офіс')),
                ('statute_copy', models.FileField(null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg'])], verbose_name='Статутні документи')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примітка')),
                ('system_id', models.CharField(max_length=256, null=True)),
                ('system_password', models.CharField(max_length=256, null=True)),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coreorganization_author', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='atu.atudistrict', verbose_name='Район')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='coreorganization_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Організації',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_value', models.IntegerField(default=0)),
                ('model', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GroupOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Група компаній (організацій)',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='**Дані помічено на видалення?')),
                ('unique_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Інформацію, відмічену за допомогою UUID, можна використовувати без необхідності вирішення конфлікту імен', verbose_name='**Унікальний ідентифікатор запису, в загальному просторі імен')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Назва')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization')),
            ],
            options={
                'verbose_name': 'Департамент оргацінзації',
            },
            bases=(apps.l_core.mixins.CheckProtected, apps.l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.AddField(
            model_name='coreorganization',
            name='group_organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.grouporganization', verbose_name='Група компаній'),
        ),
        migrations.AddField(
            model_name='coreorganization',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='coreorganization',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='atu.aturegion', verbose_name='Область'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.department'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.coreorganization'),
        ),
        migrations.AddField(
            model_name='coreuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
